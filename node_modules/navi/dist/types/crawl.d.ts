import { CrawlItem } from './Crawler';
import { Matcher } from './Matcher';
import { URLDescriptor } from './URLTools';
export interface CrawlOptions<Context extends object = any> {
    routes: Matcher<Context>;
    /**
     * If provided, this part of any URLs will be ignored. This is useful
     * for mounting a Navi app in a subdirectory on a domain.
     */
    basename?: string;
    context?: Context;
    /**
     * The bottom-most URL that should be crawled.
     */
    root?: string | URLDescriptor;
    predicate?: (request: CrawlItem) => boolean;
    expandPattern?: (pattern: string) => undefined | string[] | Promise<undefined | string[]>;
    headers?: {
        [name: string]: string;
    };
    hostname?: string;
    method?: string;
    /**
     * Configures whether a trailing slash will be added or removed. By default,
     * the trailing slash will be removed.
     */
    trailingSlash?: 'add' | 'remove' | null;
}
export interface CrawlResult {
    paths: string[];
    redirects: {
        [name: string]: string;
    };
}
export declare function crawl<Context extends object = any>(options: CrawlOptions<Context>): Promise<CrawlResult>;
