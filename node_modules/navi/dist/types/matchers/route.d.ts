import { Resolvable } from '../Resolvable';
interface Route<Data extends object = any> {
    data?: Data;
    error?: any;
    head?: any;
    headers?: {
        [name: string]: string;
    };
    state?: any;
    status?: number;
    title?: string;
    view?: any;
}
interface RouteOptions<Context extends object, Data extends object = any> {
    data?: Data;
    getData?: Resolvable<Data, Context>;
    error?: any;
    head?: any;
    getHead?: Resolvable<any, Context>;
    headers?: {
        [name: string]: string;
    };
    getHeaders?: Resolvable<{
        [name: string]: string;
    }, Context>;
    state?: any;
    getState?: Resolvable<any, Context>;
    status?: number;
    getStatus?: Resolvable<number, Context>;
    title?: string;
    getTitle?: Resolvable<string, Context>;
    view?: any;
    getView?: Resolvable<any, Context>;
}
export declare function route<Context extends object, Data extends object = any>(options?: RouteOptions<Context, Data> | Resolvable<Route<Data>, Context>): () => import("..").MatcherGenerator<any>;
export {};
