import { URLDescriptor } from './URLTools';
import { Observable, Observer, SimpleSubscription } from './Observable';
import { Chunk } from './Chunks';
import { MatcherGenerator } from './Matcher';
import { RouterMapOptions, Router } from './Router';
import { Mapping } from './Mapping';
export interface ChunksMap {
    [name: string]: Chunk[];
}
export declare class ChunksMapObservable implements Observable<ChunksMap> {
    private rootContext;
    private matcherGeneratorFunction;
    private rootMapping;
    private observers;
    private isRefreshScheduled;
    private isRefreshing;
    private router;
    private options;
    private lastListenId;
    private seenPathnames;
    private mapItems;
    constructor(url: URLDescriptor, rootContext: any, matcherGeneratorClass: MatcherGenerator<any>, rootMapping: Mapping, router: Router<any>, options: RouterMapOptions);
    subscribe(onNextOrObserver: Observer<ChunksMap> | ((value: ChunksMap) => void), onError?: (error: any) => void, onComplete?: () => void): SimpleSubscription;
    private expandPatterns;
    private handleUnsubscribe;
    private handleResolverUpdate;
    private refresh;
    private removeFromQueue;
    private addToQueue;
}
