import { Matcher } from './Matcher';
import { NaviRequest } from './NaviRequest';
export declare const KEY_WILDCARD = "\0";
export declare const MEMO_KEY_PREFIX = "\0";
/**
 * An object that holds information about a path that can be matched
 * in *part* of a URL.
 */
export interface Mapping {
    /**
     * The relative path of a Map to its parent, with wildcards
     * represented by a colon `:`, followed by the name of the param where
     * their value should be placed.
     */
    pattern: string;
    /**
     * A string where wildcards have been replaced with the null character
     * '\0', so that no two identical keys will match the same URL.
     */
    key: string;
    /**
     * A regex that matches the path.
     * It should start with ^, but should not end with $.`
     */
    regExp: RegExp;
    /**
     * The names of params that correspond to wildcards in the relative path.
     */
    pathParamNames?: string[];
    /**
     * The node that will be used to handle detailed matching of this path,
     * once a tentative match is found.
     */
    matcher: Matcher<any>;
}
export declare function createRootMapping(matcher: Matcher<any>, rootPath?: string): Mapping;
export declare function createMapping(pattern: string, matcher: Matcher<any>): Mapping;
export declare function matchAgainstPathname(request: NaviRequest, mapping: Mapping): NaviRequest | undefined;
