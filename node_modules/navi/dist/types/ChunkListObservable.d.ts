import { MatcherGenerator } from './Matcher';
import { Observable, Observer, SimpleSubscription } from './Observable';
import { URLDescriptor } from './URLTools';
import { Chunk } from './Chunks';
import { NaviRequest } from './NaviRequest';
export declare class ChunkListObservable implements Observable<Chunk[]> {
    readonly url: URLDescriptor;
    private result;
    private matcherIterator;
    private observers;
    private lastListenId;
    constructor(url: URLDescriptor, request: NaviRequest, matcherGenerator: MatcherGenerator<any>);
    subscribe(onNextOrObserver: Observer<Chunk[]> | ((value: Chunk[]) => void), onError?: (error: any) => void, onComplete?: () => void): SimpleSubscription;
    private handleUnsubscribe;
    private handleChange;
    private refresh;
}
